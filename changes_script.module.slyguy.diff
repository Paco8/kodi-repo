diff --git a/addon.xml b/addon.xml
index 22aa147..e4ea490 100644
--- a/addon.xml
+++ b/addon.xml
@@ -1,7 +1,8 @@
 <?xml version="1.0" encoding="UTF-8" standalone="yes"?>
 <addon id="script.module.slyguy" name="SlyGuy Common" provider-name="SlyGuy" version="0.44.0">
   <requires>
-    <import addon="repository.slyguy"/>
+    <!-- <import addon="repository.slyguy"/> -->
+    <import addon="script.module.ttml2ssa" version="0.2.5" />
   </requires>
   <extension point="xbmc.service" library="service.py" start="login" />
   <extension point="xbmc.python.pluginsource" library="default.py" />
diff --git a/resources/lib/proxy.py b/resources/lib/proxy.py
index a87ee29..f5e5d0e 100644
--- a/resources/lib/proxy.py
+++ b/resources/lib/proxy.py
@@ -697,6 +697,10 @@ class RequestHandler(BaseHTTPRequestHandler):
         has_default_subs = False
         found_default_subs = False
 
+        use_ttml2ssa = self._session.get('use_ttml2ssa', False)
+        if use_ttml2ssa:
+            m3u8 = re.sub(r'^#EXT-X-MEDIA:TYPE=SUBTITLES.*?$', '#DELETED', m3u8, flags=re.M)
+
         for line in m3u8.splitlines():
             if not line.strip():
                 continue
diff --git a/resources/modules/slyguy/gui.py b/resources/modules/slyguy/gui.py
index aba90e3..85fbeb0 100644
--- a/resources/modules/slyguy/gui.py
+++ b/resources/modules/slyguy/gui.py
@@ -367,7 +367,7 @@ class Item(object):
         else:
             self.inputstream = None
 
-        def make_sub(url, language='unk', mimetype='', forced=False):
+        def make_sub(url, language='unk', mimetype='',  extension='srt', forced=False):
             if not url.lower().startswith('http') and not url.lower().startswith('plugin://'):
                 return url
 
@@ -386,7 +386,7 @@ class Item(object):
                 url = url_for(ROUTE_WEBVTT, url=url)
                 mimetype = 'text/vtt'
 
-            proxy_url = '{}{}.srt'.format(language, '.forced' if forced else '')
+            proxy_url = '{}{}.{}'.format(language, '.forced' if forced else '', extension)
             proxy_data['path_subs'][proxy_url] = url
 
             return u'{}{}'.format(proxy_path, proxy_url)
@@ -414,6 +414,7 @@ class Item(object):
                 'audio_description': settings.getBool('audio_description', True),
                 'subs_forced': settings.getBool('subs_forced', True),
                 'subs_non_forced': settings.getBool('subs_non_forced', True),
+                'use_ttml2ssa': settings.getBool('use_ttml2ssa', False),
                 'verify_ssl': settings.getBool('verify_ssl', True),
                 'subtitles': [],
                 'path_subs': {},
diff --git a/resources/modules/slyguy/plugin.py b/resources/modules/slyguy/plugin.py
index b311667..2f7acf7 100644
--- a/resources/modules/slyguy/plugin.py
+++ b/resources/modules/slyguy/plugin.py
@@ -328,6 +328,13 @@ def _settings(**kwargs):
 @route(ROUTE_WEBVTT)
 @plugin_callback()
 def _webvtt(url, _data_path, _headers, **kwargs):
+    if 'ttml2ssa' in url:
+        res = _download_subtitle(url)
+        if res:
+            with open(_data_path, 'wb') as f:
+                f.write(res.encode('utf8'))
+        return _data_path + '|content-type=text/vtt'
+
     r = Session().get(url, headers=_headers)
     data = r.content.decode('utf8')
     reader = detect_format(data)
@@ -337,6 +344,40 @@ def _webvtt(url, _data_path, _headers, **kwargs):
 
     return _data_path + '|content-type=text/vtt'
 
+def _download_subtitle(url):
+    import os.path
+    try:
+        # Python 3
+        from urllib.parse import unquote
+    except ImportError:
+        # Python 2
+        from urllib import unquote
+
+    arguments = url.split('/')
+    log.debug('**** arguments: {}'.format(arguments))
+
+    if len(arguments) < 4:
+        return None
+
+    url = unquote(arguments[0])
+    lang = arguments[2]
+    extension = arguments[3]
+    log.debug('**** url: {} lang: {} extension: {}'.format(url, lang, extension))
+
+    from ttml2ssa import Ttml2SsaAddon
+    ttml = Ttml2SsaAddon()
+    vtt, offset = ttml.download_m3u8_disney(url)
+    ttml.subtitle_language = lang
+    ttml.shift = offset
+    ttml.parse_vtt_from_string(vtt)
+
+    if extension == 'ssa':
+        res = ttml.generate_ssa()
+    else:
+        res = ttml.generate_srt()
+
+    return res
+
 @route(ROUTE_RESET)
 def _reset(**kwargs):
     if not gui.yes_no(_.PLUGIN_RESET_YES_NO):
@@ -516,6 +557,9 @@ class Item(gui.Item):
         quality = kwargs.get(QUALITY_TAG, self.quality)
         is_live = ROUTE_LIVE_TAG in kwargs
 
+        if settings.getBool('use_ttml2ssa', False) and self.inputstream.manifest_type == 'hls':
+            self._add_subtitles()
+
         if quality is None:
             quality = settings.getEnum('default_quality', QUALITY_TYPES, default=QUALITY_ASK)
             if quality == QUALITY_CUSTOM:
@@ -555,6 +599,41 @@ class Item(gui.Item):
         else:
             xbmc.Player().play(self.path, li)
 
+    def _add_subtitles(self):
+        log.debug("***** path: {}".format(self.path))
+        log.debug("***** profile path: {}".format(ADDON_PROFILE))
+
+        from ttml2ssa import Ttml2SsaAddon
+        ttml = Ttml2SsaAddon()
+        subtype = ttml.subtitle_type()
+        language_list = [x.strip().lower() for x in settings.get('subs_whitelist', '').split(',') if x]
+        allow_forced = settings.getBool('subs_forced', True)
+        allow_non_forced = settings.getBool('subs_non_forced', True)
+        log.debug("***** language_list: {}".format(language_list))
+        log.debug("***** allow_forced: {} allow_non_forced: {}".format(allow_forced, allow_non_forced))
+        sub_list = ttml.get_subtitle_list_from_m3u8_url(self.path, language_list, allow_forced, allow_non_forced)
+        log.debug("***** sub_list: {}".format(sub_list))
+
+        self.subtitles = []
+        def append_sub(url, lang, filename, extension, tag=''):
+            try:
+                # Python 3
+                from urllib.parse import quote
+            except ImportError:
+                # Python 2
+                from urllib import quote
+
+            url = "{}/ttml2ssa/{}/{}".format(quote(url, safe=''), lang, extension)
+            self.subtitles.append([url, lang+tag, '', extension])
+
+        for sub in sub_list:
+            if subtype != 'srt':
+                append_sub(sub['url'], sub['lang'], sub['filename'], 'ssa')
+            if subtype != 'ssa':
+                append_sub(sub['url'], sub['lang'], sub['filename'], 'srt', '.SRT' if subtype == 'both' else '')
+
+        log.debug("***** subtitles: {}".format(self.subtitles))
+
 #Plugin.Folder()
 class Folder(object):
     def __init__(self, title=None, items=None, content='AUTO', updateListing=False, cacheToDisc=True, sort_methods=None, thumb=None, fanart=None, no_items_label=_.NO_ITEMS, no_items_method='dialog', show_news=True):
